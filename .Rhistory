summary(merged.r3.red3) ## BEST MODEL?
anova(merged.r3.red3, merged.r3.1)
summary(merged.r3.1)
summary(merged.r3)
merged.r3.red4 <- lmer(log_response ~  responseC+ categoryC+expC+ (1+expC+categoryC+responseC|item) + (1+responseC|Participant), data = merged)
summary(merged.r3.red2)
anova(merged.r3.red3, merged.r3.red4)
simple_effects <- emmeans(merged.r3.1, ~ expC)
summary(merged.r3.red3) ## BEST MODEL?
library(dplyr)
library(tidyverse)
library(ggplot2)
options(scipen=999)
library(lme4)
library(tidyr)
#install.packages('Rmisc')
library(Rmisc)
summary(merged.r3.red3) ## BEST MODEL?
summary(merged.r3.red3) ## BEST MODEL?
library(lmerTest)
merged.r3.red3 <- lmer(log_response ~  responseC+ categoryC*expC+ (1+expC*responseC+categoryC|item) + (1|Participant), data = merged)
merged.r3.red3 <- lmer(log_response ~  responseC+ categoryC*expC+ (1+expC*responseC+categoryC|item) + (1|Participant), data = merged)
summary(merged.r3.red3) ## BEST MODEL?
model5 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1|item) + (1|Participant), data = merged)
model5.1 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1+expC|item) + (1|Participant), data = merged)
model5.2 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1+expC+responseC|item) + (1|Participant), data = merged)
model5.3 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1+expC+responseC+categoryC|item) + (1|Participant), data = merged)
anova(model5, model5.1)
anova(model5.1, model5.2)
anova(model5.2, model5.3) #Lots of improvements
model5.3 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1+expC+responseC+categoryC|item) + (1|Participant), data = merged)
model5.3.1 <- lmer(log_response ~ expC + categoryC + responseC + expC:responseC + expC:categoryC + (1+expC+responseC+categoryC|item) + (1+responseC|Participant), data = merged)
anova(model5.3, model5.3.1) #no improvement
##best model is model5.3
summary(model5.3)
##best model is model5.3
summary(model5.3)
anova(model5.2, model5.3) #Lots of improvements
summary(merged.r3.red3, model5.2) ## BEST MODEL?
anova (merged.r3.red3, model5.3) ## BEST MODEL?
anova(merged.r3.red3) ## BEST MODEL?
summary(merged.r3.red1)
merged.r3.red1 <- lmer(log_response ~ categoryC*responseC + responseC*expC + categoryC*expC+ (1+expC+categoryC+responseC|item) + (1|Participant), data = merged)
summary(merged.r3.red1)
summary(merged.r3.red3) ## BEST MODEL?
merged.r3.red3 <- lmer(log_response ~  responseC* categoryC*expC+ (1+expC*responseC+categoryC|item) + (1|Participant), data = merged)
summary(merged.r3.red3) ## BEST MODEL?
summary(merged.r3.1)
merged.r3.1 <- lmer(log_response ~ categoryC*responseC*expC + (1+expC*responseC+categoryC|item) + (1|Participant), data = merged)
summary(merged.r3.1)
simple_effects <- emmeans(merged.r3.red3, ~ categoryC:expC)
library(emmeans)
simple_effects <- emmeans(merged.r3.red3, ~ categoryC:expC)
pairs(simple_effects)
simple_effects <- emmeans(merged.r3.red3, ~ categoryC:expC)
summary(merged.r3.red3)
simple_effects <- emmeans(merged.r3.red3, ~ categoryC|expC)
pairs(simple_effects)
simple_effects <- emmeans(merged.r3.red3, ~ expC|categoryC)
pairs(simple_effects)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
mean.RTs.1c <- if_1c_clean2 %>%
group_by(type, category, response) %>%
dplyr::summarise(
.groups = "keep",
N      = length(ReactionTime),
Mean   = mean(ReactionTime, na.rm = TRUE),
SD     = sd(ReactionTime, na.rm = TRUE),
SE=SD/sqrt(N),
CIlow  = Mean - (qnorm(0.975) * SD / sqrt(N)),
CIhigh = Mean + (qnorm(0.975) * SD / sqrt(N)),
)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
if_1c_clean <- if_1c %>%
filter(outside==0)
if_1c_clean2 <- if_1c_clean %>%
filter(comp_check==1)
if_1c_clean2 <- if_1c_clean %>%
mutate(category = ifelse(condition== "TT", "control",
ifelse(condition== "TF", "control",
ifelse(condition=='FT', "target", 0))))
mean.RTs.1c <- if_1c_clean2 %>%
group_by(type, category, response) %>%
dplyr::summarise(
.groups = "keep",
N      = length(ReactionTime),
Mean   = mean(ReactionTime, na.rm = TRUE),
SD     = sd(ReactionTime, na.rm = TRUE),
SE=SD/sqrt(N),
CIlow  = Mean - (qnorm(0.975) * SD / sqrt(N)),
CIhigh = Mean + (qnorm(0.975) * SD / sqrt(N)),
)
safe_colorblind_palette <- c("#88CCEE", "#CC6677", "#DDCC77", "#117733", "#332288", "#AA4499",
"#44AA99", "#999933", "#882255", "#661100", "#6699CC", "#888888")
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
ggsave("std_biscuit.png", plot = last_plot(), width = 7, height = 5, dpi = 300)
library(dplyr)
library(tidyverse)
library(ggplot2)
options(scipen=999)
library(lme4)
library(tidyr)
library(Rmisc)
library(blme)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
View(mean.RTs.1c)
library(ggplot2)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
merged.mean.RTs %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=exp)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=exp)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#88CCEE", "#CC6677")) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
merged.mean.RTs %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=exp)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=exp)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#3d5a80" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
merged.mean.RTs %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=exp)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=exp)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#293241" ,"#98c1d9" )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
merged.mean.RTs %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=exp)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=exp)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#98c1d9", "#293241"  )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
ggsave("exp1bvsexp1a.png", plot = last_plot(), width = 7, height = 5, dpi = 300)
mean.RTs_biscuit %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%  mutate(conditional_new = ifelse(conditional=='if', 'biscuit'))%>%
ggplot(aes(x=response_new, y=Mean, color=conditional_new)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=category)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales="free_x", labeller = labeller(category = c("control" = "control", "critical" = "critical"))) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
scale_color_manual(values=c("#98c1d9", "#98c1d9")) +
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
#ylim(1200,2200)+
xlab(NULL)
ggsave("biscuit_RT.png", plot = last_plot(), width = 4, height = 4, dpi = 300)
percentage.biscuit %>%
filter(response=='F') %>%
ggplot(aes(x=category,y=percentage_true, fill=conditional)) +
geom_bar(stat='identity',position = 'dodge') + geom_text(aes(label=round(percentage_true, 2)))+
#facet_grid(.~conditional)+
theme_bw()+
ylab('proportion of logical yes responses')+
scale_fill_manual(values=c("#98c1d9")) +
theme_bw()+
theme(legend.position = "bottom")+
labs(fill = NULL)+
xlab(NULL)
ggsave("biscuit_percent.png", plot = last_plot(), width = 4, height = 4, dpi = 300)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "control yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category,  scales = "free_x",labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c("#98c1d9", "#293241")) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw(base_size=13)+
theme_bw()+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
xlab(NULL)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=exp)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=exp)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#98c1d9", "#293241"  )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#98c1d9", "#293241"  )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
ggsave("exp1c_RT.png", plot = last_plot(), width = 7, height = 5, dpi = 300)
merged.mean.RTs %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#98c1d9", "#293241"  )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
#ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
mean.RTs.1c %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x=response_new, y=Mean, color=type)) +
geom_point(size=2) +
geom_line(size=0.7, aes(group=type)) +
geom_errorbar(aes(ymin=Mean-SE, ymax=Mean+SE), width=.1, size=0.7) +
facet_grid(.~category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
scale_color_manual(values=c( "#98c1d9", "#293241"  )) +
labs(x="Response", y="Reaction time [ms]") +
theme_bw()+
theme(plot.title = element_text(size = 10, face = "bold"))+
theme(legend.position = "bottom")+
theme(legend.title = element_blank())+
labs(fill = NULL)+
#ggtitle('Exp 1 vs Exp 2')+
xlab(NULL)
ggsave("exp1c_RT.png", plot = last_plot(), width = 7, height = 5, dpi = 300)
percentage.1c %>%
filter(response=='F') %>%
ggplot(aes(x=category,y=logical_yes, fill=type)) +
geom_bar(stat='identity',position = 'dodge') +   geom_text(aes(label=round(logical_yes, 2)), position = position_dodge(width = 1))+
scale_fill_manual(values=c(  "#293241", "#98c1d9"), breaks = c("standard", "biscuit")) +
ylab('proportion of logical yes responses')+
#ylim(0,1)+
theme_bw()+
facet_grid(~fct_rev(type))+
theme(legend.position = "bottom")+
labs(fill = NULL)+
xlab(NULL)
ggsave("std_biscuit_percent.png", plot = last_plot(), width = 8, height = 4, dpi = 300)
percentage %>%
filter(response=='F') %>%
ggplot(aes(x=category,y=percentage_true, fill=conditional)) +
geom_bar(stat='identity',position = 'dodge') +   geom_text(aes(label=round(percentage_true, 2)), position = position_dodge(width = 1))+
ylab('proportion of logical yes responses')+
facet_grid(.~conditional, labeller = labeller(conditional = c("if" = "if", "onlyif" = "only if")))+
scale_fill_manual(values=c("#293241", "#caf0f8")) +
theme_bw()+
theme(legend.position = "bottom")+
labs(fill = NULL)+
xlab(NULL)
percentage %>%
filter(response=='F') %>%
ggplot(aes(x=category,y=percentage_true, fill=conditional)) +
geom_bar(stat='identity',position = 'dodge') +   geom_text(aes(label=round(percentage_true, 2)), position = position_dodge(width = 1))+
ylab('proportion of logical yes responses')+
facet_grid(.~conditional, labeller = labeller(conditional = c("if" = "if", "onlyif" = "only if")))+
scale_fill_manual(values=c("#293241", "#a69cac")) +
theme_bw()+
theme(legend.position = "bottom")+
labs(fill = NULL)+
xlab(NULL)
mean.RTs_if_onlyif %>%
mutate(response_new = ifelse(response == "F", "logical yes", ifelse(response == "J", "pragmatic no", response))) %>%
mutate(response_new = case_when(response_new == "logical yes" ~ "logical yes",
category == "control" ~ "logical no",
TRUE ~ "pragmatic no")) %>%
mutate(response_new = factor(response_new, levels = rev(c("pragmatic no", "logical no", "logical yes")))) %>%
ggplot(aes(x = response_new, y = Mean, color = conditional)) +
geom_point(size = 2) +
geom_line(size = 0.7, aes(group = conditional)) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.1, size = 0.7) +
facet_grid(. ~ category, scales = "free_x", labeller = labeller(category = c("control" = "control", "target" = "critical"))) +
labs(x = "Response", y = "Reaction time [ms]") +
theme_bw(base_size = 13) +
scale_color_manual(values = c("#293241", "#a69cac")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(legend.title = element_blank()) +
labs(fill = NULL) +
xlab(NULL)
ggsave("if_onlyif_RT.png", plot = last_plot(), width = 7, height = 5, dpi = 300)
ggsave("standard_percent.png", plot = last_plot(), width = 8, height = 4, dpi = 300)
percentage %>%
filter(response=='F') %>%
ggplot(aes(x=category,y=percentage_true, fill=conditional)) +
geom_bar(stat='identity',position = 'dodge') +   geom_text(aes(label=round(percentage_true, 2)), position = position_dodge(width = 1))+
ylab('proportion of logical yes responses')+
facet_grid(.~conditional, labeller = labeller(conditional = c("if" = "if", "onlyif" = "only if")))+
scale_fill_manual(values=c("#293241", "#a69cac")) +
theme_bw()+
theme(legend.position = "bottom")+
labs(fill = NULL)+
xlab(NULL)
ggsave("standard_percent.png", plot = last_plot(), width = 8, height = 4, dpi = 300)
ggplot(penguins,
aes(x = flipper_length_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(
title = "Flipper and bill length",
subtitle = "Dimensions for penguins at Palmer Station LTER",
x = "Flipper length (mm)", y = "Bill length (mm)",
color = "Penguin species", shape = "Penguin species"
) +
theme_minimal()
